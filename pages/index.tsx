import Head from "next/head"
import Image from "next/image"
import { useCallback, useEffect, useState } from "react"

import Web3 from "web3"
import Web3Modal from "web3modal"

import ERC20Abi from "../abis/ERC20.json"

const contractAddresses = {
  // alfajores
  "44787": {
    CELO: "0xf194afdf50b03e69bd7d057c1aa9e10c9954e4c9",
    cUSD: "0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1",
    cEUR: "0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F",
  },
  // baklava
  "62320": {
    CELO: "0xddc9be57f553fe75752d61606b94cbd7e0264ef8",
    cUSD: "0x62492a644a588fd904270bed06ad52b9abfea1ae",
    cEUR: "0xf9ece301247ad2ce21894941830a2470f4e774ca",
  },
  // mainnet
  "42220": {
    CELO: "0x471ece3750da237f93b8e339c536989b8978a438",
    cUSD: "0x0caff678471b333f9425d608e8589887089187a0",
    cEUR: "0xd8763cba276a3738e6de85b4b3bf5fded6d6ca73",
  },
}

export default function Home() {
  const [web3, setWeb3] = useState<Web3 | null>(null)
  const [account, setAccount] = useState<string>("")
  const [chainId, setChainId] = useState<string>("")
  const [balances, setBalances] = useState({
    CELO: "0",
    cUSD: "0",
    cEUR: "0",
  })

  const connect = async () => {
    const web3Modal = new Web3Modal({
      cacheProvider: true,
      providerOptions: {},
    })
    const provider = await web3Modal.connect()
    const w3 = new Web3(provider)
    setWeb3(w3)
    setAccount((await w3.eth.getAccounts())[0])

    window.ethereum.on("accountsChange", ([newAccount]: string[]) =>
      setAccount(newAccount),
    )
    window.ethereum.on("chainChanged", (chainId: string) => {
      setChainId(parseInt(chainId, 16).toString())
    })
    setChainId(
      parseInt(
        await window.ethereum.request({ method: "eth_chainId" }),
        16,
      ).toString(),
    )
  }

  const fetchBalances = useCallback(async () => {
    if (!chainId || !account || !web3) {
      return
    }

    const [CELO, cUSD, cEUR] = (
      await Promise.all(
        Object.values(contractAddresses[chainId]).map(
          async (contractAddress) => {
            console.log(contractAddress)
            const erc20 = new web3.eth.Contract(ERC20Abi, contractAddress)
            return erc20.methods.balanceOf(account).call()
          },
        ),
      )
    ).map((balance) => Web3.utils.fromWei(balance))

    setBalances({
      CELO,
      cUSD,
      cEUR,
    })
  }, [chainId, account, web3])

  const send = async () => {
    const erc20 = new web3!.eth.Contract(
      ERC20Abi,
      contractAddresses[chainId].CELO,
    )
    const result = await erc20.methods
      .transfer("0xab74207ee35fbe1fb949bdcf676899e9e72ec530", "1")
      .send({ from: account })
    alert(`Send tranasction with hash ${result.transactionHash}`)
    fetchBalances()
  }

  useEffect(() => {
    fetchBalances()
  }, [fetchBalances])

  return (
    <div>
      <Head>
        <title>Web3Modal Celo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {web3 ? (
          <div>
            <div>Connected Account: {account}</div>
            <div>
              <h2>Balances</h2>
              <ul>
                {Object.keys(balances).map((token) => (
                  <li>
                    {token}: {balances[token]}
                  </li>
                ))}
              </ul>
            </div>

            <button onClick={send}>Send</button>
          </div>
        ) : (
          <button onClick={connect}>Connect to Metamask</button>
        )}
      </main>
    </div>
  )
}
